# https://projecteuler.net/problem=2
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

require 'matrix'

module Problems
  class Problem002
    attr_reader :max
    attr_reader :fibs

    def initialize(max)
      @max = max
      @fibs = [0, 1]
    end

    # Used in specs only
    def value
      (Matrix[[1, 1], [1, 0]]**(@max + 1))[1, 0]
    end

    def even_numbers_sum
      @max.times { @fibs.push(@fibs[-1] + @fibs[-2]) }

      @fibs.shift
      @fibs.shift

      @fibs.map { |number| number.even? ? number : 0 }.inject(:+)
    end
  end
end
